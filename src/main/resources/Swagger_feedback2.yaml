---
openapi: 3.1.0
info:
  description: Ecohub API Documentation
  title: Feedback Form
  version: '0.0.1'
servers:
- description: ecohub server
  url: http://localhost:8080
paths:
  "/admin/messages":
    get:
      parameters: 
        - in: query
          name: STATUS
          schema:
            type: array
            examples:
              - OPEN
              - CLOSED
          required: false
        - in: query
          name: TOPIC
          schema:
            type: array
            examples:
              - OPINION
              - PROBLEM
      description: Получение администратором списка сообщений пользователей.
      tags: 
        - Administrator actions
      operationId: getAdminMessages
      responses: 
        '200':
          description: получение списка сообщений
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/AdminMessages'
        '404':
          description: сообщения не найдены
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessageError'
  "/admin/messages/{id}":
    get:
      description: получение сообщения с заданным id от пользователя
      tags: 
        - Administrator actions
      operationId: getAdminMessage
      parameters: 
      - name: id 
        in: path
        required: true
        schema:
          type: integer
        example: 1
      responses: 
        '200':
          description: получение сообщения
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/AdminMessage'
        '404':
          description: сообщение не найдено
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessageError'
    post: 
      description: отправка ответа пользователю
      tags: 
        - Administrator actions
      operationId: sentMessageByAdmin
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/AdminMessage'
      responses: 
        '200':
          description: сообщение отправлено
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/AdminMessage'
        '404':
          description: сообщение не отправлено
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/MessageNotSentError'
  
  
  "/feedbacks":
    get: 
      description: пользователь получает список всех своих сообщений (отзывов)
      tags: 
        - User actions
      operationId: getUserMessages
      responses: 
        '200':
          description: список отзывов получен
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserMessages' 
        '404':
            description: в базе не нпйдены отзывы данного пользователя
            content:
              application/json: 
                schema: 
                  $ref: '#/components/schemas/GetMessageError'
  "/feedbacks/{userFeedbackCount}":
    get:
      parameters: 
      - name: userFeedbackCount
        in: path
        required: true
        schema: 
          type: integer
          examples:
            - 1
      description: получение отзыва пользователя по его номеру
      tags: 
        - User actions
      operationId: getUserMessage
      responses: 
        '200':
          description: отзыв c id = {userFeedbackCount} получен
          content: 
            application/json: 
              schema: 
                $ref: '#/components/schemas/UserMessage' 
        '404':
            description: в базе не найден отзыв данного пользователя
            content:
              application/json: 
                schema: 
                  $ref: '#/components/schemas/GetMessageError'
    post:
      description: отправка сообщения пользователем
      tags: 
        - User actions
      operationId: sentMessageByUser
      requestBody: 
        required: true
        content: 
          application/json:
            schema:
              $ref: '#/components/schemas/AdminMessage'
  



components:
  schemas: 
    AdminMessage:
      type: object
      properties:
        id:
          type: integer
          examples: 
            - 1
            - 2
        userFeedbackCount:
          type: integer
          description: количество отзывов у пользователя
          examples:
            - 1
            - 2
        name:
          type: string
          description: имя которое пользователь вводит в форму для отправки
          examples:
            - Андрей
            - Роман
        email:
          type: string
          examples:
            - andrei56@gmail.com
        message_topic:
          type: array
          description: тема обращения/вопроса, для удобной навигации
          array:
            - QUESTION
            - OPINION
            - PROBLEM
        message_content:
          type: string
          description: текст вопроса который задает пользователь
          examples:
            - Добрый день! Проверьте, пожалуйста, контактные данные по точке переработки по улице Слободская 59, не получается дозвониться по указанному номеру.
        message_time:
          type: string
          description: время, когда вопрос пользователя был отправлен
          format: date-time
          examples:
            - 03-07-2023 20:17:11
        # admin_id:
        #   type: integer
        #   description: id администратора, который ответил пользователю
        #   examples:
        #     - 1
        response_content:
          type: string
          description: текст ответа от администратора
          examples:
            - здесь будет текст ответа
        response_time:
          type: string
          description: время отправки ответа пользователю на его вопрос
          format: date-time
          examples:
            - 04-07-2023 09:00:16
        response_status:
          type: array
          description: когда пользователь отправляет сообщение, ему присваивается статус "open", когда администратор отправляет ответ, статус фидбэка меняется на "closed"
          enum: 
            - closed
            - open
            
    AdminMessages:
      type: array
      items:
        $ref: '#/components/schemas/AdminMessage'
    
    UserMessage:
      type: object
      properties:
        name:
          type: string
          description: имя которое пользователь вводит в форму для отправки
          examples:
            - Андрей
            - Роман
        userFeedbackCount:
          type: integer
          description: счетчик количества отзывов у пользователя
          examples: 
            - 1
            - 2
        email:
          type: string
          examples:
            - andrei56@gmail.com
        message_topic:
          type: array
          description: тема обращения/вопроса, для удобной навигации
          enum:
            - QUESTION
            - OPINION
            - PROBLEM
        message_content:
          type: string
          description: тело вопроса который задает пользователь
          examples:
            - Добрый день! Проверьте, пожалуйста, контактные данные по точке переработки по улице Слободская 59, не получается дозвониться по указанному номеру.
        message_time:
          type: string
          description: время, когда вопрос пользователя был отправлен
          format: date-time
          examples:
            - 03-07-2023 20:17:11
        response_content:
          type: string
          description: текст ответа от администратора
          examples:
            - Добрый день! Спасибо за Ваше обращение, информация по пункту переработки, находящемуся по адресу ул.Слободская 59 успешно обновлена. С уважением, Алеся.
        response_time:
          type: string
          description: время отправки ответа пользователю на его вопрос
          format: date-time
          examples:
            - 04-07-2023 09:00:16
        response_status:
          type: array
          description: когда пользователь отправляет сообщение, ему присваивается статус "open", когда администратор отправляет ответ, статус фидбэка меняется на " closed"
          enum: 
            - closed
            - open
    UserMessages:
      type: array
      items: 
        $ref: '#/components/schemas/UserMessage' 



    GetMessageError:
      type: object
      required: 
        - code
        - message
      properties: 
        code:
          type: integer
          examples:
            - 404
        message:
          type: string
          description: описание ошибки
          examples:
            - NOT_FOUND
    MessageNotSentError:
      type: object
      required: 
        - code
        - message
      properties: 
        code:
          type: integer
          examples:
            - 420
        message:
          type: string
          description: описание ошибки
          examples:
            - METHOD_FAILURE