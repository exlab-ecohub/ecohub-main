-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.recyclable_types
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT recyclable_types_pkey PRIMARY KEY (id),
    CONSTRAINT recyclable_types_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.recycling_points
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(100) COLLATE pg_catalog."default",
    address character varying(100) COLLATE pg_catalog."default",
    phone_number character varying(30) COLLATE pg_catalog."default",
    website character varying(100) COLLATE pg_catalog."default",
    latitude numeric,
    longitude numeric,
    CONSTRAINT recycling_points_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.recycling_points_recyclable_types
(
    recycling_point_id bigint NOT NULL,
    recyclable_type_id bigint NOT NULL,
    CONSTRAINT recycling_points_recyclable_types_pkey PRIMARY KEY (recycling_point_id, recyclable_type_id)
);

CREATE TABLE IF NOT EXISTS public.roles
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(20) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roles_pkey PRIMARY KEY (id),
    CONSTRAINT roles_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    username character varying(20) COLLATE pg_catalog."default" NOT NULL,
    password character varying(20) COLLATE pg_catalog."default" NOT NULL,
    email character varying(50) COLLATE pg_catalog."default",
    role_id bigint NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email),
    CONSTRAINT users_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.working_hours
(
    recycling_point_id bigint NOT NULL,
    day_of_week smallint NOT NULL,
    opening_time time without time zone,
    closing_time time without time zone,
    lunch_start_time time without time zone,
    lunch_end_time time without time zone,
    CONSTRAINT working_hours_pkey PRIMARY KEY (recycling_point_id, day_of_week)
);

CREATE TABLE IF NOT EXISTS public.feedbacks
(
    feedback_id serial NOT NULL,
    email character varying,
    message_topic character varying,
    message_content text,
    message_time time without time zone,
    admin_id integer,
    response_content text,
    response_time time without time zone,
    response_status character varying,
    PRIMARY KEY (feedback_id)
);

CREATE TABLE IF NOT EXISTS public.feedbacks_users
(
    feedbacks_feedback_id serial NOT NULL,
    users_id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 )
);

ALTER TABLE IF EXISTS public.recycling_points_recyclable_types
    ADD CONSTRAINT recycling_points_recyclable_types_recyclable_type_id_fkey FOREIGN KEY (recyclable_type_id)
    REFERENCES public.recyclable_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.recycling_points_recyclable_types
    ADD CONSTRAINT recycling_points_recyclable_types_recycling_point_id_fkey FOREIGN KEY (recycling_point_id)
    REFERENCES public.recycling_points (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.users
    ADD CONSTRAINT users_role_id_fkey FOREIGN KEY (role_id)
    REFERENCES public.roles (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.working_hours
    ADD CONSTRAINT working_hours_recycling_point_id_fkey FOREIGN KEY (recycling_point_id)
    REFERENCES public.recycling_points (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.feedbacks_users
    ADD FOREIGN KEY (feedbacks_feedback_id)
    REFERENCES public.feedbacks (feedback_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.feedbacks_users
    ADD FOREIGN KEY (users_id)
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;